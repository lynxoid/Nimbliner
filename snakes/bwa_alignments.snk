# run and evaluate bwa alignments

TIME_CMD = "/usr/bin/time -lp nice "

"""
"""
rule evaluate_bwa_alignments:
	input:
		align="{work_dir}/{reference}/alignments/bwa/{dataset}.bam",
		script="py-src/stats.py"
	output:
		"{work_dir}/{reference,[a-z0-9]+}/analysis/bwa/{dataset}_eval.txt"
	run:
		import stats
		stats.compute_basic_bwa_stats(input.align, output[0])


"""
Align reads using bwa mem
"""
rule align_reads_bwa:
	input:
		index="{work_dir}/{reference}/index/bwa/{reference}.ann",
		reads="{work_dir}/{reference,[a-z0-9]+}/sampled/{dataset}.fa"
	params:
		index="{work_dir}/{reference}/index/bwa/{reference}",
	output:
		"{work_dir}/{reference}/alignments/bwa/{dataset}.bam"
	threads:
		1
	log:
		"{work_dir}/{reference}/log/bwa/align_{dataset}.log"
	params: K=config["K"]
	shell:
		TIME_CMD + "bwa mem -t {threads} {params.index} {input.reads} 2> {log} | samtools view -Sb - > {output} "


"""
Build index for bwa
"""
rule build_bwa_index:
	input:
		ref=expand("{input}/{reference}.fa", 
						input=config["input_dir"], 
						reference=config["reference"]),
	params:
		dir="{work_dir}/{reference}/index/bwa/{reference}",
	output:
		"{work_dir}/{reference}/index/bwa/{reference}.amb",
		"{work_dir}/{reference}/index/bwa/{reference}.ann",
		"{work_dir}/{reference}/index/bwa/{reference}.bwt",
		"{work_dir}/{reference}/index/bwa/{reference}.pac",
		"{work_dir}/{reference}/index/bwa/{reference}.sa"
	log:
		"{work_dir}/{reference}/index/bwa/build_index_{reference}.log"
	shell:
		TIME_CMD + "bwa index -p {params.dir} {input.ref} > {log} 2>&1"